{"ast":null,"code":"var _jsxFileName = \"E:\\\\BusinessIntelligence\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../../components/Infobar/Infobar';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = `localhost:2600`;\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    console.log(socket);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerExterior\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["E:/BusinessIntelligence/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","console","log","emit","off","on","sendMessage","event","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,IAAIC,MAAJ;;AAIA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMgB,QAAQ,GAAI,gBAAlB;AACAf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAACO,MAAAA,IAAD;AAAOE,MAAAA;AAAP,QAAeR,WAAW,CAACe,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAArB;AACAb,IAAAA,MAAM,GAAGF,EAAE,CAACa,QAAD,CAAX;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AAEJI,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACgB,IAAP,CAAY,MAAZ,EAAoB;AAACb,MAAAA,IAAD;AAAOE,MAAAA;AAAP,KAApB,EAAkC,MAAM,CAEvC,CAFD;AAIA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACgB,IAAP,CAAY,YAAZ;AACAhB,MAAAA,MAAM,CAACiB,GAAP;AACH,KAHD;AAKC,GAlBQ,EAkBN,CAACN,QAAD,EAAWT,QAAQ,CAACW,MAApB,CAlBM,CAAT;AAqBAjB,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,MAAM,CAACkB,EAAP,CAAU,SAAV,EAAsBX,OAAD,IAAa;AAC1BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACP,KAFD;AAGH,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT;;AAOA,QAAMU,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGd,OAAH,EAAW;AACPP,MAAAA,MAAM,CAACgB,IAAP,CAAY,aAAZ,EAA2BT,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACH;AACJ,GAND;;AASAM,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ,EAAqBE,QAArB;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEJ,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAWH,CAzDD;;AA2DA,eAAeJ,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\nimport './Chat.css';\r\nimport InfoBar from '../../components/Infobar/Infobar'\r\nlet socket;\r\n\r\n\r\n\r\nconst Chat = ({location}) => {\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const ENDPOINT = `localhost:2600`;\r\n    useEffect(() => {\r\n        const {name, room} = queryString.parse(location.search);\r\n        socket = io(ENDPOINT);\r\n\r\n        console.log(socket);\r\n        \r\n    setName(name);\r\n    setRoom(room);\r\n    \r\n    socket.emit('join', {name, room}, () => {\r\n           \r\n    });\r\n\r\n    return () => {\r\n        socket.emit('disconnect');\r\n        socket.off();\r\n    }\r\n    \r\n    }, [ENDPOINT, location.search]);\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on('message', (message) => {\r\n                setMessages([...messages, message]);\r\n        })\r\n    }, [messages])\r\n\r\n    \r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n        \r\n        if(message){\r\n            socket.emit('sendMessage', message, () => setMessage(''));\r\n        }\r\n    }\r\n\r\n\r\n    console.log(message, messages);\r\n\r\n\r\n    return (\r\n        <div className=\"containerExterior\">\r\n            <div className=\"container\">\r\n                <InfoBar room={room} />\r\n            \r\n            \r\n                {/* <input value={message} onChange={(event) => setMessage(event.target.value)}\r\n                onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}/> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}